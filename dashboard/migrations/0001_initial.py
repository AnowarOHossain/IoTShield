# Generated by Django 5.2.7 on 2025-10-24 17:58

import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Device',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('device_id', models.CharField(max_length=100, unique=True)),
                ('device_type', models.CharField(choices=[('ESP32', 'ESP32 Microcontroller'), ('RASPBERRY_PI', 'Raspberry Pi'), ('SIMULATOR', 'Simulator')], max_length=20)),
                ('name', models.CharField(max_length=200)),
                ('location', models.CharField(blank=True, max_length=200)),
                ('is_active', models.BooleanField(default=True)),
                ('last_seen', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ControlCommand',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('command_type', models.CharField(choices=[('TURN_ON', 'Turn On'), ('TURN_OFF', 'Turn Off'), ('ADJUST', 'Adjust'), ('ALERT', 'Alert')], max_length=20)),
                ('parameters', models.JSONField(default=dict)),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('SENT', 'Sent'), ('EXECUTED', 'Executed'), ('FAILED', 'Failed')], default='PENDING', max_length=20)),
                ('response', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('executed_at', models.DateTimeField(blank=True, null=True)),
                ('device', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='commands', to='dashboard.device')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='SensorData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sensor_type', models.CharField(choices=[('TEMPERATURE', 'Temperature Sensor'), ('HUMIDITY', 'Humidity Sensor'), ('GAS', 'Gas Sensor'), ('FLAME', 'Flame Sensor'), ('MOTION', 'Motion Sensor'), ('LIGHT', 'Light Sensor')], max_length=20)),
                ('value', models.FloatField()),
                ('unit', models.CharField(blank=True, max_length=20)),
                ('is_anomaly', models.BooleanField(default=False)),
                ('anomaly_score', models.FloatField(blank=True, null=True)),
                ('timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('device', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sensor_data', to='dashboard.device')),
            ],
            options={
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='Alert',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('ai_suggestion', models.TextField(blank=True)),
                ('severity', models.CharField(choices=[('LOW', 'Low'), ('MEDIUM', 'Medium'), ('HIGH', 'High'), ('CRITICAL', 'Critical')], default='MEDIUM', max_length=10)),
                ('status', models.CharField(choices=[('NEW', 'New'), ('ACKNOWLEDGED', 'Acknowledged'), ('RESOLVED', 'Resolved'), ('IGNORED', 'Ignored')], default='NEW', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('sensor_data', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='alerts', to='dashboard.sensordata')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='SystemLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('level', models.CharField(choices=[('DEBUG', 'Debug'), ('INFO', 'Info'), ('WARNING', 'Warning'), ('ERROR', 'Error'), ('CRITICAL', 'Critical')], max_length=10)),
                ('module', models.CharField(max_length=100)),
                ('message', models.TextField()),
                ('details', models.JSONField(blank=True, default=dict)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['-timestamp'],
                'indexes': [models.Index(fields=['-timestamp'], name='dashboard_s_timesta_49faa9_idx'), models.Index(fields=['level'], name='dashboard_s_level_bf0cd7_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='sensordata',
            index=models.Index(fields=['device', '-timestamp'], name='dashboard_s_device__d65e33_idx'),
        ),
        migrations.AddIndex(
            model_name='sensordata',
            index=models.Index(fields=['sensor_type', '-timestamp'], name='dashboard_s_sensor__ebc9e7_idx'),
        ),
        migrations.AddIndex(
            model_name='sensordata',
            index=models.Index(fields=['is_anomaly'], name='dashboard_s_is_anom_b2eb30_idx'),
        ),
        migrations.AddIndex(
            model_name='alert',
            index=models.Index(fields=['-created_at'], name='dashboard_a_created_47d083_idx'),
        ),
        migrations.AddIndex(
            model_name='alert',
            index=models.Index(fields=['severity', 'status'], name='dashboard_a_severit_213949_idx'),
        ),
    ]
